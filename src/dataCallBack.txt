//*********************************************************
void dataInCallback(char *topic, byte *payload, unsigned int length)
{
  // TODO: Need to handle various incoming messages here
  Serial.print(F("Message arrived ["));
  Serial.print(topic);
  Serial.println(F("] "));
  Serial.print("Length of payload = ");
  Serial.println(length);

  Serial.println();
  StaticJsonDocument<256> json;
  DeserializationError error = deserializeJson(json, payload, length);
  // Test if parsing succeeds.
  if (error)
  {
    Serial.print(F("deserializeJson() failed: "));
    Serial.println(error.c_str());
    json.clear();
    return;
  }
  Serial.println(F("deserializeJson() worked!! "));
  serializeJsonPretty(json, Serial);
  Serial.println();

  // const char *Unit_ID = json["Unit_ID"];
  // Serial.print("Unit_ID = ");
  // Serial.println(Unit_ID);
  json.clear();
}

//[{"ESPModule_ID":"ESP-C835F9BF713C","Unit_ID":"FL-105D","PMI_Class":"FL-D","PMI_Hours":150,"PMI_Months":12}]